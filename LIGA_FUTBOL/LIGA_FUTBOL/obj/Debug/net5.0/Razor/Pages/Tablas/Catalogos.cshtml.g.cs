#pragma checksum "C:\Users\Uriel Sandi G\Desktop\Repositorio\GRUPO3-LigaFutbolEC\LIGA_FUTBOL\LIGA_FUTBOL\Pages\Tablas\Catalogos.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "fd01032bf6d8cd70f6d41ae0e8b5f441aa869b22"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(LIGA_FUTBOL.Pages.Tablas.Pages_Tablas_Catalogos), @"mvc.1.0.razor-page", @"/Pages/Tablas/Catalogos.cshtml")]
namespace LIGA_FUTBOL.Pages.Tablas
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\Uriel Sandi G\Desktop\Repositorio\GRUPO3-LigaFutbolEC\LIGA_FUTBOL\LIGA_FUTBOL\Pages\_ViewImports.cshtml"
using Microsoft.AspNetCore.Identity;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\Uriel Sandi G\Desktop\Repositorio\GRUPO3-LigaFutbolEC\LIGA_FUTBOL\LIGA_FUTBOL\Pages\_ViewImports.cshtml"
using LIGA_FUTBOL;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\Uriel Sandi G\Desktop\Repositorio\GRUPO3-LigaFutbolEC\LIGA_FUTBOL\LIGA_FUTBOL\Pages\_ViewImports.cshtml"
using LIGA_FUTBOL.Data;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"fd01032bf6d8cd70f6d41ae0e8b5f441aa869b22", @"/Pages/Tablas/Catalogos.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"57b4aa2bbfdf7ded417199e769579d8e1196b593", @"/Pages/_ViewImports.cshtml")]
    public class Pages_Tablas_Catalogos : global::Microsoft.AspNetCore.Mvc.RazorPages.Page
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral(@"

<div class=""Catalogos"">
    <div class=""Menu"">
        <div class=""ListaCatalogos"">
            <strong>Lista de catalogos </strong>
            <a href=""../Pages/Tablas/Probando Estadio.cshtml"">Estadios</a>
            <a>Clubes</a>
            <a>Jugadores</a>
        </div>


    </div>

    <div class=""Contenido"">
        <script type=""module"">
            import CreateTable from ""../js/TableComponent.js"";
            const LoadData = async () => {
                let url = ""../api/Values/GetTorneo"";
                let response = await fetch(url);
                response = await response.json();
                CreateTable(response, TableData, FunctionEdit);
            }
            const FunctionEdit = async (Item) => {
                console.log(Item);
                TxtID.value = Item.iD_TORNEO;
                TxtNombre.value = Item.nombrE_TORNEO;
                TxtFechaI.value = Item.fechA_INICIO;
                TxtFechaF.value = Item.fechA_FINAL;
               ");
            WriteLiteral(@" TxtNumeroJornadas.value = Item.numerO_DE_JORNADAS;


            }
            window.onload = async () => {
                BtnSave.onclick = async () => {
                    const ObjIns = {
                        ID_TORNEO: (TxtID.value == """" ? -1 : TxtID.value),
                        NOMBRE_TORNEO: TxtNombre.value,
                        FECHA_INICIO: TxtFechaI.value,
                        FECHA_FINAL: TxtFechaF.value,
                        NUMERO_DE_JORNADAS: TxtNumeroJornadas.value

                    }
                    let url = ""../api/Values/SaveTorneo"";
                    let response = await fetch(url, {
                        method: 'POST',
                        headers: {
                            'Content-type': 'application/json; charset-utf-8',
                            'Accept': '*/*'
                        },
                        body: JSON.stringify(ObjIns)
                    });
                    response = await response.json();
      ");
            WriteLiteral(@"              if (response == true) {
                        alert(""Datos Guardados"");
                        LoadData();
                        TxtID.Value = ""-1"";
                        TxtNombre.value = """";
                        TxtFechaI.value = """";
                        TxtFechaF.value = """";
                        TxtNumeroJornadas.value = """";

                    }
                }
                LoadData();
            }
        </script>


        <div class=""FrmContainer"">
            <div hidden=""True"">
                ID del Torneo:
                <input class=""TxtForm"" type=""number"" id=""TxtID"" placeholder=""Propiedad..."" value=""-1"" />
            </div>
            <div>
                Nombre del Torneo:
                <input class=""TxtForm"" type=""text"" id=""TxtNombre"" placeholder=""Propiedad..."" />
            </div>
            <div>
                Fecha de inicial:
                <input class=""TxtForm"" type=""date"" id=""TxtFechaI"" placeholder=""Propiedad...""");
            WriteLiteral(@" />
            </div>
            <div>
                Fecha Final:
                <input class=""TxtForm"" type=""date"" id=""TxtFechaF"" placeholder=""Propiedad..."" />
            </div>
            <div>
                Numero de Jornadas:
                <input class=""TxtForm"" type=""number"" id=""TxtNumeroJornadas"" placeholder=""Propiedad..."" />
            </div>
        </div>

        <div class=""FrmContainer"">
            <div>
                <input class=""BTN BTNOk2"" type=""button"" id=""BtnSave"" value=""Guardar"" />
            </div>
        </div>


        <div class=""container-fluid mt-4"">
            <div class=""row"">
                <div class=""col"">
                    <h4>Lista de Torneos</h4>
                </div>
            </div>
            <div class=""row"">
                <div class=""col"">
                    <table id=""TableData"" class=""FrmTable"">
                        <thead>
                        </thead>
                        <tbody>
                    ");
            WriteLiteral("    </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n</div>");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<LIGA_FUTBOL.Pages.Tablas.CatalogosModel> Html { get; private set; }
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary<LIGA_FUTBOL.Pages.Tablas.CatalogosModel> ViewData => (global::Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary<LIGA_FUTBOL.Pages.Tablas.CatalogosModel>)PageContext?.ViewData;
        public LIGA_FUTBOL.Pages.Tablas.CatalogosModel Model => ViewData.Model;
    }
}
#pragma warning restore 1591
